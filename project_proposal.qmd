---
title: "project_proposal"
format: html
editor: visual
author: "Soren Fliegel, Chris Liu, Kevin Cisneros-Cuevas, Haoxian Liu"
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
    number-sections: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

```{r setup}
library(tidyverse)
library(purrr)
```

# Dataset

Detailed description of the datasets and variables here.

```{r}
life_expectancy <- read.csv("lex.csv")
gdp_per_capita <- read.csv("gdp_pcap.csv")
```

The life expectancy table consists of data from year 1800-2100 which is a large range. Looking at the data, it seems like some countries in this table have missing values for multiple years, which could undesirable if we want to look for accurate trends. We could technically forward-fill or backward-fill missing data. However, it might also skew our results, so the best option in the end is to remove the countries with a lot of missing values. Let's say that countries with more than 20% missing values is bad data. Let also make the column names a little bit nicer by adding a prefix before the year instead of X. That way it is more descriptive.

```{r}

clean_life_expectancy <- life_expectancy |> 
  # calculating proportion of missing values for each row
  # source: https://www.statology.org/rowmeans-in-r/
  filter(rowMeans(across(-country, is.na)) <= 0.2) |> 
  # gsub: https://www.statology.org/gsub-r/
  # rename: https://dplyr.tidyverse.org/reference/rename.html
  rename_with(~ gsub("^X", "lex_", .), starts_with("X"))

clean_life_expectancy
  
```

Let's also rename the year columns in the `gdp_per_capita` table. Also, it seems like not every value in the data set is numeric. Some of the GDP per capita values have "k" notation (e.g. 24.5k instead of 24500). So, we will need to convert them to actual numbers.

```{r}

# using a function :)

convert_k <- function(vec){
  has_k <- str_detect(vec, "k")
  vec_numeric <- as.numeric(str_replace(vec, "k", "")) 
  return(vec_numeric * ifelse(has_k, 1000, 1))   
}
```

```{r}
 
clean_gdp_per_capita <- gdp_per_capita |> 
  rename_with(~ gsub("^X", "gdp_per_capita_", .), starts_with("X")) |> 
  # all columns type -> numeric
  mutate(across(-country, convert_k))

clean_gdp_per_capita
  
```

```{r}

cleaned_df <- clean_life_expectancy |> 
  inner_join(clean_gdp_per_capita, join_by("country")) 
  
cleaned_df

  
```
